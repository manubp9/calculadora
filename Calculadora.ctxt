#BlueJ class context
comment0.params=
comment0.target=Calculadora()
comment0.text=\r\n\ Constructor\ for\ objects\ of\ class\ Calculadora\r\n
comment1.params=
comment1.target=void\ multiplesOfFive()
comment1.text=\r\n\ \ \ \ -Implementa\ un\ m\u00E9todo\ llamado\ multiplesOfFive\ que\ imprima\ todos\ los\ m\u00FAltiplos\ de\ 5\ entre\ 10\r\n\ \ \ \ y\ 95\ (ambos\ extremos\ no\ incluidos)\ y\ haz\ un\ commit.\r\n
comment2.params=
comment2.target=void\ sumValues()
comment2.text=\r\n\ Implementa\ un\ m\u00E9todo\ llamado\ sumValues\ que\ saque\ por\ pantalla\ la\ suma\ de\ los\ n\u00FAmeros\ comprendidos\ entre\ el\ 0\ \r\n\ y\ el\ 10\ (ambos\ incluidos)\ haciendo\ uso\ de\ un\ bucle\ while\ y\ haz\ un\ commit.\r\n
comment3.params=num1\ num2
comment3.target=int\ sumValuesInterval(int,\ int)
comment3.text=\r\n\ Implementa\ un\ m\u00E9todo\ llamado\ `sumValuesInterval`\ que\ reciba\ dos\ par\u00E1metros\ enteros\ `a`\ y\ `b`\ \r\n\ y\ devuelva\ la\ suma\ de\ los\ valores\ comprendidos\ entre\ dichos\ par\u00E1metros\ (ambos\ incluidos)\ y\ haz\ un\ commit.\ \r\n\ En\ caso\ de\ que\ `b`\ sea\ menor\ que\ `a`,\ el\ programa\ debe\ intercambiarlos.\ En\ caso\ de\ que\ sean\ el\ mismo\ n\u00FAmero,\ el\ valor\ que\ ha\ de\ retornarse\ es\ el\ mismo\ n\u00FAmero.\ \r\n\ Se\ debe\ comprobar\ que\ ambos\ par\u00E1metros\ son\ positivos\ o\ 0;\ \r\n\ en\ caso\ contrario\ se\ informa\ por\ pantalla\ del\ error\ y\ se\ devuelve\ -1.\r\n
comment4.params=num
comment4.target=boolean\ isPrime(int)
comment4.text=\r\n\ Implementa\ un\ m\u00E9todo\ llamado\ `isPrime(int\ n)`\ que\ devuelva\ verdadero\ si\ el\ par\u00E1metro\ `n`\ es\ primo\ o\ falso\ en\ caso\ contrario.\ \r\n\ Debes\ usar\ un\ bucle\ while\ \ que\ divida\ el\ n\u00FAmero\ entre\ todos\ los\ valores\ comprendidos\ entre\ `2`\ y\ `(n\ -1)`.\ Si\ alguna\ de\ estas\ divisiones\ da\ de\ resto\ 0,\r\n\ entonces\ el\ n\u00FAmero\ no\ es\ primo.\ Se\ debe\ comprobar\ que\ el\ par\u00E1metro\ es\ mayor\ que\ 1;\ \r\n\ en\ caso\ contrario\ se\ informa\ por\ pantalla\ del\ error\ y\ se\ devuelve\ `false`.\r\n
comment5.params=n1\ n2
comment5.target=int\ multiplicar(int,\ int)
comment5.text=\r\n\ \r\n\ \ \ \ A\ partir\ del\ c\u00F3digo\ terminado\ de\ la\ actividad\ 0049,\ implementa\ un\ m\u00E9todo\ para\ realizar\ multiplicaciones\ entre\ enteros\ positivos.\ \r\n\ \ \ \ Debes\ decidir\ por\ ti\ mismo\ qu\u00E9\ par\u00E1metros\ debe\ recibir\ dicho\ m\u00E9todo.\ El\ m\u00E9todo\ devuelve\ un\ valor\ de\ tipo\ entero.\r\n\ \ \ \ Se\ pone\ como\ condici\u00F3n\ que\ para\ realizarlo\ solo\ se\ pueden\ emplear\ las\ operaciones\ matem\u00E1ticas\ suma\ y\ resta,\r\n\ \ \ \ no\ estando\ permitido\ usar\ ninguna\ otra\ operaci\u00F3n\ matem\u00E1tica.\ Si\ los\ par\u00E1metros\ no\ son\ enteros\ positivos\ el\ m\u00E9todo\ deben\ devolver\ -1\ e\ informar\ por\ pantalla\ del\ error.\r\n\ \ \ \ Haz\ un\ commit.\r\n\ \ \ \ Implementa\ ahora\ un\ m\u00E9todo\ para\ realizar\ divisiones\ entre\ enteros\ positivos.\ Debes\ decidir\ por\ ti\ mismo\ qu\u00E9\ par\u00E1metros\ debe\ recibir\ dicho\ m\u00E9todo.\r\n\ \ \ \ El\ m\u00E9todo\ devuelve\ un\ valor\ de\ tipo\ entero.\ Se\ pone\ como\ condici\u00F3n\ que\ para\ realizarlo\ solo\ se\ pueden\ emplear\ las\ operaciones\ matem\u00E1ticas\ suma\ y\ resta,\ no\ estando\ permitido\ usar\ ninguna\ otra\ operaci\u00F3n\ matem\u00E1tica.\ Si\ los\ par\u00E1metros\ no\ son\ enteros\ positivos\ el\ m\u00E9todo\ deben\ devolver\ -1\ e\ informar\ por\ pantalla\ del\ error.\r\n
numComments=6
